% [labels, start, finish, distance, speed] = loadCleverSys(filename, <sheet>)
% epochs = loadCleverSys(filename, <sheet>)
% Returns a list of event epochs generated by CleverSys.
% 
% Example:
%   filename = 'data\sequential events - frame.xlsx';
%   sheet = 1;
%   [labels, start, finish, distance, speed] = loadCleverSys(filename, sheet);
%   mean1 = mean(speed{1});
%   mean2 = mean(speed{2});
%   plot([mean1, mean2], 'o');
%   xlim([0, 3]);
%   title(sprintf('Compare speeds between "%s" and "%s"', labels{1}, labels{2}));

% 2019-08-20. Leonardo Molina.
% 2020-11-24. Last modified.
function varargout = loadCleverSys(filename, sheet)
    [~, sheetNames, tableFormat] = xlsfinfo(filename);
    
    switch tableFormat
        case {'xlHtml', 'xlCSV'}
            readParameters = {};
        otherwise
            if nargin == 1
                sheet = 1;
            end
            if isnumeric(sheet)
                readParameters = {'Sheet', sheetNames{sheet}};
            else
                readParameters = {'Sheet', sheet};
            end
    end
    
    state = warning('QUERY', 'MATLAB:datetime:AutoConvertStrings');
    warning('OFF', 'MATLAB:datetime:AutoConvertStrings');
    data = readcell(filename, readParameters{:});
    warning(state.state, 'MATLAB:table:ModifiedAndSavedVarnames');
    
    [r, c] = find(cellfun(@(c) isequal(c, 'Event'), data));
    titles = data(r, :);
    valid = cellfun(@isstr, data(:, c));
    valid(1:r) = false;
    eventNames = data(valid, c);
    labels = unique(eventNames);
    nUnique = numel(labels);
    columns = [...
        find(cellfun(@(title) startsWith(title, 'From '), titles)), ...
        find(cellfun(@(title) startsWith(title, 'Length('), titles)), ...
        find(cellfun(@(title) startsWith(title, 'Dist('), titles)), ...
        find(cellfun(@(title) startsWith(title, 'V('), titles)) ...
    ];
    data = cell2mat(data(valid, columns));
    start = cell(nUnique, 1);
    finish = cell(nUnique, 1);
    distance = cell(nUnique, 1);
    speed = cell(nUnique, 1);
    epochs = cell(1, 2 * nUnique);
    for u = 1:nUnique
        label = labels{u};
        k = ismember(eventNames, label);
        start{u} = data(k, 1);
        finish{u} = data(k, 1) + data(k, 2);
        distance{u} = data(k, 3);
        speed{u} = data(k, 4);
        epochs{2 * u - 1} = label;
        epochs{2 * u - 0} = reshape([start{u}, finish{u}]', 1, []);
    end
    
    if nargout == 1
        varargout = {epochs};
    else
        varargout = {labels, start, finish, distance, speed};
    end
end